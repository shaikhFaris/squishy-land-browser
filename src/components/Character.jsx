/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Modified to support multiple animated instances
*/

import React, { useEffect, useRef, useMemo } from "react";
import { useAnimations, useGLTF } from "@react-three/drei";
import { clone } from "three/examples/jsm/utils/SkeletonUtils";

export function Character({ animation = "idle", ...props }) {
  const group = useRef();

  // Load only once
  const { scene, animations } = useGLTF("/models/character.glb");

  // Clone the scene to avoid shared skeleton issues
  const clonedScene = useMemo(() => clone(scene), [scene]);

  // Attach animations to the cloned group
  const { actions } = useAnimations(animations, group);

  useEffect(() => {
    if (actions && actions[animation]) {
      actions[animation].reset().fadeIn(0.2).play();
    }
    return () => {
      actions?.[animation]?.fadeOut(0.2);
    };
  }, [animation, actions]);

  return <primitive ref={group} object={clonedScene} {...props} />;
}

useGLTF.preload("/models/character.glb");
